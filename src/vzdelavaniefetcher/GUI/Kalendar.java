/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vzdelavaniefetcher.GUI;

import java.awt.Color;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import vzdelavaniefetcher.Client;
import vzdelavaniefetcher.Predmet;
import vzdelavaniefetcher.StudijneVysledky;
import vzdelavaniefetcher.Termin;

/**
 *
 * @author Unlink
 */
public class Kalendar extends javax.swing.JPanel {

    private final String ALL_PREDMETY = "Všetky";
    private List<Predmet> aPredmety;
    private StudijneVysledky aStudijneVysledky;
    private boolean aLenNeukoncenePredmety;
	private Client aFetcher;

    /**
     * Creates new form Kalendar
     *
     * @param predms
     * @param username
     */
    public Kalendar(List<Predmet> predms, String username, Client f) {
        this(predms, username, null, f);
    }

    public Kalendar(List<Predmet> paPredmety, String paFeatchUserName, StudijneVysledky paVysledky, Client f) {
        initComponents();
        aPredmety = paPredmety;
        jLabel4.setText(paFeatchUserName);
        aStudijneVysledky = paVysledky;
        aLenNeukoncenePredmety = true;
		aFetcher = f;
        regenerate();
    }

    /**
     * Vygeneruje kalendáre
     */
    public final void regenerate() {
        generateZapTerminy();
        generateVypTerminy(null);
        List<String> aktivnePredmety = new ArrayList<>();
        aktivnePredmety.add(ALL_PREDMETY);
        for (Predmet p : aPredmety) {
            if (p.getZostavajucichTerminov() > 0) {
                aktivnePredmety.add(p.toString());
            }
        }
        jComboBox1.setModel(new DefaultComboBoxModel(aktivnePredmety.toArray(new String[0])));
    }

    /**
     * Vygenetuje zoznam terminov, na ktoré je prihglasený
     */
    private void generateZapTerminy() {
        generujZoznam(jPanel1, aPredmety, new TerminyFilter() {
            @Override
            public boolean filter(Termin termin) {
                return termin.isSomPrihlaseny() && termin.getDatum().compareTo(new Date()) == 1;
            }
        });
    }

    /**
     * Vygeneruje vypísané terminy
     *
     * @param predm Predmet, ktorého terminy sa vypíšu, ak null tak pre všetky
     */
    private void generateVypTerminy(final String predm) {
        generujZoznam(jPanel2, aPredmety, new TerminyFilter() {
            @Override
            public boolean filter(Termin termin) {
                return (predm == null || predm.equals(termin.getPredmet().getNazov())) && (!termin.isSomPrihlaseny() && termin.getDatum().compareTo(new Date()) == 1) && (!aLenNeukoncenePredmety || !aStudijneVysledky.isSpraveny(termin.getPredmet().getNazov()));
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        setMinimumSize(new java.awt.Dimension(650, 300));
        setOpaque(false);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Zapísané skúšky");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(jPanel2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Vypísané termíny");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Prihlásený ako:");

        jLabel4.setText("jLabel4");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Zobraz len neukončené predmety");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox1)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        vygenerujVypisaneTerminyFiltered();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void vygenerujVypisaneTerminyFiltered() {
        aLenNeukoncenePredmety = jCheckBox1.isSelected();
        Object obj = jComboBox1.getSelectedItem();
        if (!((String) obj).equals(ALL_PREDMETY)) {
            generateVypTerminy((String) obj);
        }
        else {
            generateVypTerminy(null);
        }
    }

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        vygenerujVypisaneTerminyFiltered();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * Vráti zoznam všetkých predmetov
     *
     * @return
     */
    public List<Predmet> getPredmety() {
        return aPredmety;
    }

    private void generujZoznam(JPanel panel, List<Predmet> predmety, TerminyFilter filter) {
        generujZoznamPredmetov(panel, predmety, filter, true, new KalendarDay.Callback() {
            @Override
            public void stateChanged(Termin paTermin) {
                regenerate();
            }
        });
    }

    /**
     * Do zadaného panelu vygeneruje termíny
     *
     * @param panel Panel, do ktorého sa vygenruju predmety
     * @param predmety Zoznam predmetov
     * @param filter Filter terminov
     * @param prihlasovanie Zobrazovanie prihlasovacieho tlačidla
     * @param callback Callback, po prihlasení/odhlaseni predmetu
     */
    public void generujZoznamPredmetov(JPanel panel, List<Predmet> predmety, TerminyFilter filter, boolean prihlasovanie, KalendarDay.Callback callback) {
        List<Termin> terminy = new ArrayList<Termin>();
        for (Predmet p : predmety) {
            for (Termin t : p) {
                if (filter.filter(t)) {
                    terminy.add(t);
                }
            }
        }
        Collections.sort(terminy, new Comparator<Termin>() {
            @Override
            public int compare(Termin o1, Termin o2) {
                return o1.getDatum().compareTo(o2.getDatum());
            }
        });
        panel.removeAll();
        String mesiac = "";
        for (Termin t : terminy) {
            String aktMesiac = new SimpleDateFormat("MMMM yyyy", Locale.forLanguageTag("sk-SK")).format(t.getDatum());
            if (!mesiac.equals(aktMesiac)) {
                mesiac = aktMesiac;
                JLabel mm = new JLabel(mesiac);
                mm.setFont(new java.awt.Font("Tahoma", 1, 14));
                mm.setForeground(Color.DARK_GRAY.darker());
                mm.setBorder(new EmptyBorder(5, 0, 5, 0));
				mm.setAlignmentX(Component.CENTER_ALIGNMENT);
                panel.add(mm);
            }
            panel.add(new KalendarDay(t, prihlasovanie, callback, aFetcher));
        }
        panel.validate();
        panel.repaint();
        panel.getParent().validate();
    }

    /**
     * Interface slúžiaci na filtrocanie termínov, ktoré sa vygenerujú do
     * kalendára
     */
    public interface TerminyFilter {

        /**
         * Metoda, ktorá urči či sa predmet zobrazí alebo nie
         *
         * @param termin
         * @return
         */
        public boolean filter(Termin termin);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
