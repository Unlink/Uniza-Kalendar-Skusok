/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vzdelavaniefetcher.GUI;

import com.unlink.common.bugTrackerLogger.BugTrackingLoger;
import java.awt.Desktop;
import java.awt.GridLayout;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.List;
import java.util.prefs.Preferences;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import vzdelavaniefetcher.FetchException;
import vzdelavaniefetcher.Fetcher;
import vzdelavaniefetcher.FetcherListner;
import vzdelavaniefetcher.Predmet;
import vzdelavaniefetcher.StudijneVysledky;
import vzdelavaniefetcher.tools.ResourceManager;
import vzdelavaniefetcher.tools.SimpleSerializedEncrypredStringMap;

import static vzdelavaniefetcher.tools.ThreadingTools.runInThreadingPool;
import static vzdelavaniefetcher.tools.ThreadingTools.runOnUIThread;

/**
 *
 * @author Unlink
 */
public class MainFrame extends javax.swing.JFrame implements FetcherListner {

    private final String LAST_USED_USERNAME = "LAST_USERNAME";
    private final String DEFAULT_PASSWORD_STRING = "defaultpassword";

    public static ImageIcon aLoadingImg = new ImageIcon(ResourceManager.getLocalImage("vzdelavaniefetcher.GUI.images.ajax-loader(1).gif"));
    private Kalendar aKalendar;
    private final Preferences aNastavenia;
    private final SimpleSerializedEncrypredStringMap aStoredPass;

    private final StudijneVysledky aVysledky;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        aNastavenia = Preferences.userRoot().node(this.getClass().getCanonicalName());
        aStoredPass = new SimpleSerializedEncrypredStringMap(new File(ResourceManager.getWorkingDir(), "logindetails.dat"));
        aVysledky = new StudijneVysledky();
        initComponents();
        setLocationRelativeTo(null);
        jPanel1.add(jPanel2);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jProgressBar1.setVisible(false);

        //Vloženie posledneho lognuteho usera
        String username = aNastavenia.get(LAST_USED_USERNAME, "");
        jTextField1.setText(aNastavenia.get(LAST_USED_USERNAME, ""));
        if (!username.isEmpty() && aStoredPass.containsKey(username)) {
            jPasswordField1.setText(DEFAULT_PASSWORD_STRING);
            jCheckBox1.setSelected(true);
        }

        setIconImage(ResourceManager.getLocalImage("vzdelavaniefetcher.GUI.images.1370553501_Calendar.png"));

        if (ResourceManager.readResourceToString("version.txt").contains("dev")) {
            BugTrackingLoger.injectInMenu(jMenuBar1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new JPanelBacgrounded("vzdelavaniefetcher.GUI.images.background.jpg");
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jLabel4.setText("jLabel4");

        jPanel2.setOpaque(false);

        jLabel1.setText("Meno:");

        jTextField1.setMinimumSize(new java.awt.Dimension(151, 20));
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel2.setText("Heslo:");

        jPasswordField1.setMinimumSize(new java.awt.Dimension(151, 20));
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });

        jButton1.setText("Prihlásiť sa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Prihlásenie");

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Info Message");

        jProgressBar1.setValue(50);

        jLabel6.setText("Progress");

        jCheckBox1.setText("Zapamätať prihlasovacie údaje");
        jCheckBox1.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vzdelávanie - Kalendár Skúšok");
        setMinimumSize(new java.awt.Dimension(500, 300));

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jMenu1.setText("File");

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vzdelavaniefetcher/GUI/images/1370553296_keyboard_layout.png"))); // NOI18N
        jMenuItem3.setText("Otvor Vzdelavanie");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Tools");
        jMenu3.setToolTipText("");

        jMenuItem4.setText("Vyhľadávanie");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenu3.setVisible(false);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Help");

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vzdelavaniefetcher/GUI/images/1370548527_info.png"))); // NOI18N
        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        dispose();
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new About(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            Desktop.getDesktop().browse(new URI("https://vzdelavanie.uniza.sk/vzdelavanie/"));
        } catch (IOException | URISyntaxException ex) {
            JOptionPane.showMessageDialog(this, "Niečo sa nepodarilo ;)");
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if (aKalendar != null) {
            new Vyhladavanie(this, aKalendar.getPredmety()).setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jLabel5.setVisible(false);
        jButton1.setIcon(aLoadingImg);

        //Nacitanie uloženého hesla
        final String meno = jTextField1.getText();
        String pass = new String(jPasswordField1.getPassword());
        if (aStoredPass.containsKey(meno) && pass.equals(DEFAULT_PASSWORD_STRING)) {
            pass = aStoredPass.get(meno);
        }
        final String password = pass;
        final boolean savePassword = jCheckBox1.isSelected();

        runInThreadingPool(new Runnable() {
            @Override
            public void run() {
                //skusime sa lognut
                if (Fetcher.dajInstanciu().login(meno, password)) {
                    //Uložíme uspešný login
                    saveLogin(meno, password, savePassword);

                    //Proccess
                    runOnUIThread(new Runnable() {
                        @Override
                        public void run() {
                            jButton1.setIcon(null);
                            jLabel6.setVisible(true);
                            jProgressBar1.setVisible(true);
                        }
                    }, false);

                    try {
                        //Fetchnutie vysledkov
                        Fetcher.dajInstanciu().featch(aVysledky, MainFrame.this);
                        //Fetcheanie infa o predmetoch
                        List<Predmet> predmety = Fetcher.dajInstanciu().featchPredmety(MainFrame.this);
                        aKalendar = new Kalendar(predmety, Fetcher.dajInstanciu().featchUserName(), aVysledky);
                        runOnUIThread(new Runnable() {
                            @Override
                            public void run() {
                                jPanel1.removeAll();
                                jPanel1.setLayout(new GridLayout());
                                jPanel1.add(aKalendar);
                                jPanel1.validate();
                                pack();
                                jMenu3.setVisible(true);
                                validate();
                            }
                        }, false);
                    } catch (final FetchException ex) {
                        runOnUIThread(new Runnable() {
                            @Override
                            public void run() {
                                jLabel5.setText(ex.getMessage());
                                jLabel5.setVisible(true);
                                jLabel6.setVisible(false);
                                jProgressBar1.setVisible(false);
                            }
                        }, false);
                    }
                }
                //Nepodatrilo sa lognut
                else {
                    runOnUIThread(new Runnable() {
                        @Override
                        public void run() {
                            jLabel5.setText("Nesprávne prihlasovacie údaje.");
                            jLabel5.setVisible(true);
                            jButton1.setIcon(null);
                        }
                    }, false);
                }
            }
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        String username = jTextField1.getText();
        if (aStoredPass.containsKey(username)) {
            jPasswordField1.setText(DEFAULT_PASSWORD_STRING);
            jCheckBox1.setSelected(true);
        }
        else {
            jPasswordField1.setText(null);
            jCheckBox1.setSelected(false);
        }
    }//GEN-LAST:event_jTextField1FocusLost

    /**
     * Metoda na uloženie použitého hesla
     *
     * @param meno
     * @param password
     * @param savePassword
     */
    private void saveLogin(String meno, String password, boolean savePassword) {
        aNastavenia.put(LAST_USED_USERNAME, meno);
        if (savePassword) {
            aStoredPass.put(meno, password);
        }
        else {
            aStoredPass.remove(meno);
        }
    }

    /**
     * Updatne progress nacitavania
     *
     * @param paMessage
     * @param paPercentage
     */
    @Override
    public void updateState(final String paMessage, final int paPercentage) {
        runOnUIThread(new Runnable() {
            @Override
            public void run() {
                jLabel6.setText(paMessage);
                jProgressBar1.setValue(paPercentage);
            }
        }, true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        BugTrackingLoger.registerLoger();

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
